!SESSION 2019-03-25 13:37:54.976 -----------------------------------------------
eclipse.buildId=2018.3
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -data C:/Users/habel/git/UFBmod/SW

!ENTRY org.eclipse.ui 2 0 2019-03-25 13:38:06.569
!MESSAGE Warnings while parsing the commands from the 'org.eclipse.ui.commands' and 'org.eclipse.ui.actionDefinitions' extension points.
!SUBENTRY 1 org.eclipse.ui 2 0 2019-03-25 13:38:06.570
!MESSAGE Commands should really have a category: plug-in='com.xilinx.sdk.appwiz', id='com.xilinx.sdk.app.commands.ChangeAtfBuiltReferences', categoryId='com.xilinx.sdk.app.commands.category'

!ENTRY org.eclipse.ui 2 0 2019-03-25 13:38:08.066
!MESSAGE Warnings while parsing the commands from the 'org.eclipse.ui.commands' and 'org.eclipse.ui.actionDefinitions' extension points.
!SUBENTRY 1 org.eclipse.ui 2 0 2019-03-25 13:38:08.066
!MESSAGE Commands should really have a category: plug-in='com.xilinx.sdk.appwiz', id='com.xilinx.sdk.app.commands.ChangeAtfBuiltReferences', categoryId='com.xilinx.sdk.app.commands.category'

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:38.341
!MESSAGE XSCT Command: [::hsi::utils::init_repo], Thread: Worker-0

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:38.341
!MESSAGE XSCT Command: [set sdk::sdk_chan tcfchan#0], Thread: Thread-15

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:54.876
!MESSAGE XSCT command with result: [::hsi::utils::init_repo], Result: [null, ]. Thread: Worker-0

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:54.877
!MESSAGE XSCT command with result: [set sdk::sdk_chan tcfchan#0], Result: [null, tcfchan#0]. Thread: Thread-15

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:54.878
!MESSAGE XSCT Command: [setws C:/Users/habel/git/UFBmod/SW], Thread: Thread-15

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:54.880
!MESSAGE XSCT command with result: [setws C:/Users/habel/git/UFBmod/SW], Result: [null, ]. Thread: Thread-15

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:38:54.933
!MESSAGE XSCT Command: [::hsi::utils::openhw C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf], Thread: Worker-4

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.375
!MESSAGE XSCT command with result: [::hsi::utils::openhw C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf], Result: [null, ]. Thread: Worker-4

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.413
!MESSAGE XSCT Command: [::hsi::utils::get_design_properties -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf], Thread: Worker-4

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.418
!MESSAGE XSCT command with result: [::hsi::utils::get_design_properties -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf], Result: [null, {"device": "7a35t",
"family": "artix7",
"timestamp": "Sun Mar 24 23:59:12 2019",
"vivado_version": "2018.3",
"part": "xc7a35tcpg236-1",
}]. Thread: Worker-4

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.421
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf], Thread: Worker-4

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.432
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf], Result: [null, {"axi_emc_0": {"hier_name": "axi_emc_0",
"type": "axi_emc",
"version": "3.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_protocol_convert_0": {"hier_name": "axi_protocol_convert_0",
"type": "axi_protocol_converter",
"version": "2.1",
"ip_type": "BUS",
},
"axi_protocol_convert_1": {"hier_name": "axi_protocol_convert_1",
"type": "axi_protocol_converter",
"version": "2.1",
"ip_type": "BUS",
},
"axi_protocol_convert_2": {"hier_name": "axi_protocol_convert_2",
"type": "axi_protocol_converter",
"version": "2.1",
"ip_type": "BUS",
},
"axi_quad_spi_0": {"hier_name": "axi_quad_spi_0",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axi_uart16550_0": {"hier_name": "axi_uart16550_0",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"clk_wiz_0": {"hier_name": "clk_wiz_0",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"mdm_1": {"hier_name": "mdm_1",
"type": "mdm",
"version": "3.2",
"ip_type": "DEBUG",
},
"microblaze_0": {"hier_name": "microblaze_0",
"type": "microblaze",
"version": "11.0",
"ip_type": "PROCESSOR",
},
"microblaze_0_axi_intc": {"hier_name": "microblaze_0_axi_intc",
"type": "axi_intc",
"version": "4.1",
"ip_type": "INTERRUPT_CNTLR",
},
"microblaze_0_axi_periph": {"hier_name": "microblaze_0_axi_periph",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"microblaze_0_local_memory_dlmb_bram_if_cntlr": {"hier_name": "microblaze_0_local_memory_dlmb_bram_if_cntlr",
"type": "lmb_bram_if_cntlr",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"microblaze_0_local_memory_dlmb_v10": {"hier_name": "microblaze_0_local_memory_dlmb_v10",
"type": "lmb_v10",
"version": "3.0",
"ip_type": "BUS",
},
"microblaze_0_local_memory_ilmb_bram_if_cntlr": {"hier_name": "microblaze_0_local_memory_ilmb_bram_if_cntlr",
"type": "lmb_bram_if_cntlr",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"microblaze_0_local_memory_ilmb_v10": {"hier_name": "microblaze_0_local_memory_ilmb_v10",
"type": "lmb_v10",
"version": "3.0",
"ip_type": "BUS",
},
"microblaze_0_local_memory_lmb_bram": {"hier_name": "microblaze_0_local_memory_lmb_bram",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"microblaze_0_xlconcat": {"hier_name": "microblaze_0_xlconcat",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"rst_clk_wiz_0_100M": {"hier_name": "rst_clk_wiz_0_100M",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"xadc_wiz_0": {"hier_name": "xadc_wiz_0",
"type": "xadc_wiz",
"version": "3.3",
"ip_type": "PERIPHERAL",
},
}]. Thread: Worker-4

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.652
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf microblaze_0], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.659
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf microblaze_0], Result: [null, {"microblaze_0_axi_intc_s_axi": {"name": "microblaze_0_axi_intc",
"base": "0x41200000",
"high": "0x4120FFFF",
"size": "65536",
"slaveintf": "s_axi",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_0_AXI_LITE": {"name": "axi_quad_spi_0",
"base": "0x44A00000",
"high": "0x44A0FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_0_S_AXI": {"name": "axi_uart16550_0",
"base": "0x44A10000",
"high": "0x44A1FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"xadc_wiz_0_s_axi_lite": {"name": "xadc_wiz_0",
"base": "0x44A20000",
"high": "0x44A2FFFF",
"size": "65536",
"slaveintf": "s_axi_lite",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"microblaze_0_local_memory_dlmb_bram_if_cntlr_SLMB_Mem": {"name": "microblaze_0_local_memory_dlmb_bram_if_cntlr",
"base": "0x00000000",
"high": "0x00001FFF",
"size": "8192",
"slaveintf": "SLMB",
"type": "MEMORY",
"flags": "7",
"segment": "Mem",
"acctype": "",
"tz": "",
},
"axi_emc_0_S_AXI_MEM_Mem0": {"name": "axi_emc_0",
"base": "0x60000000",
"high": "0x61FFFFFF",
"size": "33554432",
"slaveintf": "S_AXI_MEM",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.691
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf mdm_1], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.694
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf mdm_1], Result: [null, {}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.704
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf microblaze_0], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2019-03-25 13:39:01.744
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json C:/Users/habel/git/UFBmod/SW/top_hw_platform_0/system.hdf microblaze_0], Result: [null, {"axi_emc_0": {"PARITY_ERR_ADDR_REG_0": {"description": "Bank-0 Parity Error Address Register",
"address_offset": "0x00",
"access": "read-only",
"size": "32",
"fields": {"PARITY_ERR_ADDR_REG_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Parity Error Register Width
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PARITY_ERR_ADDR_REG_1": {"description": "Bank-1 Parity Error Address Register",
"address_offset": "0x04",
"access": "read-only",
"size": "32",
"fields": {"PARITY_ERR_ADDR_REG_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Parity Error Register Width
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PARITY_ERR_ADDR_REG_2": {"description": "Bank-2 Parity Error Address Register",
"address_offset": "0x08",
"access": "read-only",
"size": "32",
"fields": {"PARITY_ERR_ADDR_REG_2": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Parity Error Register Width
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PARITY_ERR_ADDR_REG_3": {"description": "Bank-3 Parity Error Address Register",
"address_offset": "0x0C",
"access": "read-only",
"size": "32",
"fields": {"PARITY_ERR_ADDR_REG_3": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Parity Error Register Width
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PSRAM_FLASH_CONFIG_REG_0": {"description": "Bank-0 PSRAM/Flash Configuration Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"fields": {"Operational_Mode": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "This bits describe the mode in which PSRAM is configured(Applicable only when target memory is PSRAM)
0x00 - Asynchronous Mode
0x01 - Page Mode
0x10 - Reserved for future use (Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRE_Drive": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Remove Drive Command for CRE
1 - Drive Command for CRE
Note: Valid only for PSRAM memories
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Read_Mode": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Asynchronous Page Mode
1 - Synchronous Burst Mode (Applicable when Micron Flash is switched to Sync Read Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Control_Register_Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Normal read/writes to Micron Flash
1 - Enables Micron flash RCR register configuration
Note: Valid only if connected memory is Micron Flash
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PSRAM_FLASH_CONFIG_REG_1": {"description": "Bank-1 PSRAM/Flash Configuration Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"fields": {"Operational_Mode": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "This bits describe the mode in which PSRAM is configured(Applicable only when target memory is PSRAM)
0x00 - Asynchronous Mode
0x01 - Page Mode
0x10 - Reserved for future use (Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRE_Drive": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Remove Drive Command for CRE
1 - Drive Command for CRE
Note: Valid only for PSRAM memories
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Read_Mode": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Asynchronous Page Mode
1 - Synchronous Burst Mode (Applicable when Micron Flash is switched to Sync Read Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Control_Register_Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Normal read/writes to Micron Flash
1 - Enables Micron flash RCR register configuration
Note: Valid only if connected memory is Micron Flash
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PSRAM_FLASH_CONFIG_REG_2": {"description": "Bank-2 PSRAM/Flash Configuration Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Operational_Mode": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "This bits describe the mode in which PSRAM is configured(Applicable only when target memory is PSRAM)
0x00 - Asynchronous Mode
0x01 - Page Mode
0x10 - Reserved for future use (Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRE_Drive": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Remove Drive Command for CRE
1 - Drive Command for CRE
Note: Valid only for PSRAM memories
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Read_Mode": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Asynchronous Page Mode
1 - Synchronous Burst Mode (Applicable when Micron Flash is switched to Sync Read Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Control_Register_Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Normal read/writes to Micron Flash
1 - Enables Micron flash RCR register configuration
Note: Valid only if connected memory is Micron Flash
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"PSRAM_FLASH_CONFIG_REG_3": {"description": "Bank-3 PSRAM/Flash Configuration Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Operational_Mode": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "This bits describe the mode in which PSRAM is configured(Applicable only when target memory is PSRAM)
0x00 - Asynchronous Mode
0x01 - Page Mode
0x10 - Reserved for future use (Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRE_Drive": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Remove Drive Command for CRE
1 - Drive Command for CRE
Note: Valid only for PSRAM memories
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Read_Mode": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Asynchronous Page Mode
1 - Synchronous Burst Mode (Applicable when Micron Flash is switched to Sync Read Burst Mode)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Control_Register_Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Normal read/writes to Micron Flash
1 - Enables Micron flash RCR register configuration
Note: Valid only if connected memory is Micron Flash
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_quad_spi_0": {},
"axi_uart16550_0": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"microblaze_0_axi_intc": {"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x0",
"access": "read-write",
"size": "4",
"fields": {"INT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Interrupt Status Register.
For each bit up to number of periperhal interrupts:
  R - Reads active interrupt signal.
  W - No effect after MER HIE bit has been set, otherwise writes active interrupt signal.
For remaining bits defined by number of software interrupts:
  R - Reads software interrupt value.
  W - Writes software interrupt value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IPR": {"description": "Interrupt Pending Register",
"address_offset": "0x4",
"access": "read-only",
"size": "4",
"fields": {"INT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Interrupt Pending Register.
For each bit:
  R - Reads logical AND of bits in ISR and IER.
  W - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x8",
"access": "read-write",
"size": "4",
"fields": {"INT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Interrupt Enable Register.
For each bit:
  R - Reads interrupt enable value.
  W - Writes interrupt enable value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IAR": {"description": "Interrupt Acknowledge Register",
"address_offset": "0xC",
"access": "write-only",
"size": "4",
"fields": {"INT": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Interrupt Acknowledge Register.
For each bit:
  W - Acknowledge interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SIE": {"description": "Set Interrupt Enables",
"address_offset": "0x10",
"access": "read-write",
"size": "4",
"fields": {"INT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Set Interrupt Enables
For each bit:
  R - Reads active interrupt.
  W - Writing 1 enables the interrupt, writing 0 has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"CIE": {"description": "Clear Interrupt Enables",
"address_offset": "0x14",
"access": "read-write",
"size": "4",
"fields": {"INT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Clear Interrupt Enables
For each bit:
  R - Reads active interrupt.
  W - Writing 1 disables the interrupt, writing 0 has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IVR": {"description": "Interrupt Vector Register",
"address_offset": "0x18",
"access": "read-only",
"size": "5",
"fields": {"IVN": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Interrupt Vector Number.
  R - Reads ordinal of highest priority, enabled, active interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MER": {"description": "Master Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "2",
"fields": {"ME": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Master IRQ Enable.
  0 - All interrupts disabled.
  1 - All interrupts can be enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HIE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Hardware Interrupt Enable.
  0 - HW interrupts disabled.
  1 - HW interrupts enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IMR": {"description": "Interrupt Mode Register",
"address_offset": "0x20",
"access": "read-write",
"size": "4",
"fields": {"INT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Interrupt Mode Register.
For each bit:
  R - Reads interrupt mode.
  W - Sets interrupt mode, where 0 is normal mode and 1 is fast mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IVAR[0]": {"description": "Interrupt Vector Address Register 0",
"address_offset": "0x100",
"access": "read-write",
"size": "32",
"fields": {"IVA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Interrupt vector address of active interrupt 0 with highest priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IVAR[1]": {"description": "Interrupt Vector Address Register 1",
"address_offset": "0x104",
"access": "read-write",
"size": "32",
"fields": {"IVA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Interrupt vector address of active interrupt 1 with highest priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IVAR[2]": {"description": "Interrupt Vector Address Register 2",
"address_offset": "0x108",
"access": "read-write",
"size": "32",
"fields": {"IVA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Interrupt vector address of active interrupt 2 with highest priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IVAR[3]": {"description": "Interrupt Vector Address Register 3",
"address_offset": "0x10C",
"access": "read-write",
"size": "32",
"fields": {"IVA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Interrupt vector address of active interrupt 3 with highest priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"microblaze_0_local_memory_dlmb_bram_if_cntlr": {},
"microblaze_0_local_memory_ilmb_bram_if_cntlr": {},
"xadc_wiz_0": {},
}]. Thread: main

!ENTRY ilg.gnuarmeclipse.packs.data 4 1 2019-03-25 14:41:18.871
!MESSAGE File .repos.xml does not exist, using defaults.

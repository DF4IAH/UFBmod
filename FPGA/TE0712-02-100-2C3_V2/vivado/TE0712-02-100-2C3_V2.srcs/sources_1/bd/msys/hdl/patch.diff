--- msys_wrapper.vhd.orig	2020-07-24 22:34:32.813807100 +0200
+++ msys_wrapper.vhd	2020-07-24 22:59:31.745142400 +0200
@@ -16,4 +16,6 @@
     BOARD_IIC_scl_io : inout STD_LOGIC;
     BOARD_IIC_sda_io : inout STD_LOGIC;
+    BOARD_ROTENC_I : in STD_LOGIC;
+    BOARD_ROTENC_Q : in STD_LOGIC;
     BOARD_ROTENC_PUSH : in STD_LOGIC;
     CLK0_clk_n : in STD_LOGIC_VECTOR ( 0 to 0 );
@@ -42,10 +44,8 @@
     ETH0_DA_G : out STD_LOGIC_VECTOR ( 0 to 0 );
     ETH0_DA_Y : out STD_LOGIC_VECTOR ( 0 to 0 );
-    ETH0_LINK_LED_g : in STD_LOGIC;
+    ETH0_LINK_LED : in STD_LOGIC;
     ETH0_MDIO_MDC_mdc : out STD_LOGIC;
     ETH0_MDIO_MDC_mdio_io : inout STD_LOGIC;
-    EUI48_FSM_run : in STD_LOGIC;
-    EUI48_FSM_start : out STD_LOGIC_VECTOR ( 0 to 0 );
-    EUI48_data : in STD_LOGIC_VECTOR ( 47 downto 0 );
+    EUI48_onewire_io : inout STD_LOGIC;
     FPGA_IO : in STD_LOGIC;
     LCD_BL : out STD_LOGIC_VECTOR ( 0 to 0 );
@@ -67,8 +67,4 @@
     TRX_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
     TRX_rfx_mode : out STD_LOGIC_VECTOR ( 0 to 0 );
-    TRX_rx09_fifo_o : out STD_LOGIC_VECTOR ( 31 downto 0 );
-    TRX_rx09_fifo_valid_o : out STD_LOGIC;
-    TRX_rx24_fifo_o : out STD_LOGIC_VECTOR ( 31 downto 0 );
-    TRX_rx24_fifo_valid_o : out STD_LOGIC;
     TRX_rx_clk_64MHz_clk_n : in STD_LOGIC;
     TRX_rx_clk_64MHz_clk_p : in STD_LOGIC;
@@ -94,28 +90,5 @@
     UART0_txd : out STD_LOGIC;
     ULI_SYSTEM_XIO : in STD_LOGIC;
-    fft09_aresetn_in : in STD_LOGIC;
-    fft09_config_tdata_in : in STD_LOGIC_VECTOR ( 7 downto 0 );
-    fft09_config_tvalid_in : in STD_LOGIC;
-    fft09_data_tlast_in : in STD_LOGIC;
-    fft09_data_tready_out : out STD_LOGIC;
-    fft09_data_tvalid_in : in STD_LOGIC;
-    fft24_aresetn_in : in STD_LOGIC;
-    fft24_config_tdata_in : in STD_LOGIC_VECTOR ( 7 downto 0 );
-    fft24_config_tvalid_in : in STD_LOGIC;
-    fft24_data_tlast_in : in STD_LOGIC;
-    fft24_data_tready_out : out STD_LOGIC;
-    fft24_data_tvalid_in : in STD_LOGIC;
-    microblaze_0_Clk_100MHz_o : out STD_LOGIC;
     phy_rst_n : out STD_LOGIC;
-    premem_rx09_addra_in : in STD_LOGIC_VECTOR ( 10 downto 0 );
-    premem_rx09_addrb_in : in STD_LOGIC_VECTOR ( 10 downto 0 );
-    premem_rx09_dina_in : in STD_LOGIC_VECTOR ( 25 downto 0 );
-    premem_rx09_quarterfrm_in : in STD_LOGIC_VECTOR ( 2 downto 0 );
-    premem_rx09_wea_in : in STD_LOGIC_VECTOR ( 0 to 0 );
-    premem_rx24_addra_in : in STD_LOGIC_VECTOR ( 10 downto 0 );
-    premem_rx24_addrb_in : in STD_LOGIC_VECTOR ( 10 downto 0 );
-    premem_rx24_dina_in : in STD_LOGIC_VECTOR ( 25 downto 0 );
-    premem_rx24_quarterfrm_in : in STD_LOGIC_VECTOR ( 2 downto 0 );
-    premem_rx24_wea_in : in STD_LOGIC_VECTOR ( 0 to 0 );
     qspi_flash_io0_io : inout STD_LOGIC;
     qspi_flash_io1_io : inout STD_LOGIC;
@@ -123,8 +96,5 @@
     qspi_flash_io3_io : inout STD_LOGIC;
     qspi_flash_ss_io : inout STD_LOGIC;
-    reset : in STD_LOGIC;
-    rotenc_dec_cnt_en : in STD_LOGIC;
-    rotenc_dec_cnt_up_dwn : in STD_LOGIC;
-    rst_100M_peripheral_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 )
+    reset : in STD_LOGIC
   );
 end msys_wrapper;
@@ -280,4 +250,79 @@
   );
   end component IOBUF;
+  component rotenc_decoder is
+  port (
+    clk                 : in STD_LOGIC;
+    resetn              : in STD_LOGIC;
+    rotenc_I            : in STD_LOGIC;
+    rotenc_Q            : in STD_LOGIC;
+    cnt_up_dwn          : out STD_LOGIC;
+    cnt_en              : out STD_LOGIC
+  );
+  end component rotenc_decoder;
+  component auto_LVDS_rotate is
+  port (
+    resetn              : in  STD_LOGIC;
+    clk                 : in  STD_LOGIC;
+    LVDS09              : in  STD_LOGIC_VECTOR (31 downto 0);
+    LVDS09_valid        : in  STD_LOGIC;
+    LVDS24              : in  STD_LOGIC_VECTOR (31 downto 0);
+    LVDS24_valid        : in  STD_LOGIC;
+    rot09q              : out STD_LOGIC_VECTOR (31 downto 0);
+    rot09vld            : out STD_LOGIC;
+    rot24q              : out STD_LOGIC_VECTOR (31 downto 0);
+    rot24vld            : out STD_LOGIC
+  );
+  end component auto_LVDS_rotate;
+  component FFT_controller is
+  port (
+    -- All Clock Domain AXI 100 MHz
+    resetn                  : in  STD_LOGIC;
+    clk                     : in  STD_LOGIC;
+    
+    rx09_bs_32bits          : in  STD_LOGIC_VECTOR (31 downto 0);
+    rx09_bs_32bits_vld      : in  STD_LOGIC;
+
+    rx24_bs_32bits          : in  STD_LOGIC_VECTOR (31 downto 0);
+    rx24_bs_32bits_vld      : in  STD_LOGIC;
+    
+    PreMem09_addra          : out STD_LOGIC_VECTOR (10 downto 0);  -- (a)  2x FFT frame of 1024 points = 2048 addresses
+    PreMem09_wea            : out STD_LOGIC;
+    PreMem09_dina           : out STD_LOGIC_VECTOR (25 downto 0);  -- (b)  29..17: I-data, 13..01: Q-data
+    PreMem09_addrb          : out STD_LOGIC_VECTOR (10 downto 0);  -- see above (a)
+    PreMem09_quarterfrm     : out STD_LOGIC_VECTOR ( 2 downto 0);
+    
+    PreMem24_addra          : out STD_LOGIC_VECTOR (10 downto 0);  -- (a)  2x FFT frame of 1024 points = 2048 addresses
+    PreMem24_wea            : out STD_LOGIC;
+    PreMem24_dina           : out STD_LOGIC_VECTOR (25 downto 0);  -- see above (b)
+    PreMem24_addrb          : out STD_LOGIC_VECTOR (10 downto 0);  -- see above (a)
+    PreMem24_quarterfrm     : out STD_LOGIC_VECTOR ( 2 downto 0);
+    
+    XFFT09_aresetn          : out STD_LOGIC;
+    XFFT09_s_data_tlast     : out STD_LOGIC;
+    XFFT09_s_data_tready    : in  STD_LOGIC;
+    XFFT09_s_data_tvalid    : out STD_LOGIC;
+    XFFT09_s_conf_tdata     : out STD_LOGIC_VECTOR ( 7 downto 0);
+    XFFT09_s_conf_tvalid    : out STD_LOGIC;
+    
+    XFFT24_aresetn          : out STD_LOGIC;
+    XFFT24_s_data_tlast     : out STD_LOGIC;
+    XFFT24_s_data_tready    : in  STD_LOGIC;
+    XFFT24_s_data_tvalid    : out STD_LOGIC;
+    XFFT24_s_conf_tdata     : out STD_LOGIC_VECTOR ( 7 downto 0);
+    XFFT24_s_conf_tvalid    : out STD_LOGIC
+  );
+  end component FFT_controller;
+  component EUI48_FSM is 
+  port (
+    resetn                  : in  STD_LOGIC;
+    clk                     : in  STD_LOGIC;
+    EUI48_onewire_tri_i     : in  STD_LOGIC;
+    EUI48_onewire_tri_o     : out STD_LOGIC;
+    EUI48_onewire_tri_t     : out STD_LOGIC;
+    EUI48_FSM_start         : in  STD_LOGIC;
+    EUI48_FSM_run           : out STD_LOGIC;
+    EUI48_data              : out STD_LOGIC_VECTOR (47 downto 0)
+  );
+  end component EUI48_FSM;
   signal BOARD_IIC_scl_i : STD_LOGIC;
   signal BOARD_IIC_scl_o : STD_LOGIC;
@@ -286,4 +331,5 @@
   signal BOARD_IIC_sda_o : STD_LOGIC;
   signal BOARD_IIC_sda_t : STD_LOGIC;
+  signal ETH0_LINK_LED_g : STD_LOGIC;
   signal ETH0_MDIO_MDC_mdio_i : STD_LOGIC;
   signal ETH0_MDIO_MDC_mdio_o : STD_LOGIC;
@@ -302,4 +348,48 @@
   signal TRX_spi_ss_o_0 : STD_LOGIC_VECTOR ( 0 to 0 );
   signal TRX_spi_ss_t : STD_LOGIC;
+  signal mw_microblaze_0_Clk_100MHz : STD_LOGIC;
+  signal mw_rst_100M_peripheral_aresetn : STD_LOGIC;
+  signal mw_EUI48_FSM_start : STD_LOGIC;
+  signal mw_EUI48_FSM_run : STD_LOGIC;
+  signal mw_EUI48_data : STD_LOGIC_VECTOR ( 47 downto 0 );
+  signal mw_EUI48_onewire_tri_i : STD_LOGIC;
+  signal mw_EUI48_onewire_tri_o : STD_LOGIC;
+  signal mw_EUI48_onewire_tri_t : STD_LOGIC;
+  signal mw_TRX_rx09_fifo : STD_LOGIC_VECTOR ( 31 downto 0 );
+  signal mw_TRX_rx09_fifo_valid : STD_LOGIC;
+  signal mw_TRX_rot09vld : STD_LOGIC;
+  signal mw_TRX_rx09_bs : STD_LOGIC_VECTOR ( 31 downto 0 );
+  signal mw_TRX_rx24_fifo : STD_LOGIC_VECTOR ( 31 downto 0 );
+  signal mw_TRX_rx24_fifo_valid : STD_LOGIC;
+  signal mw_TRX_rot24vld : STD_LOGIC;
+  signal mw_TRX_rx24_bs : STD_LOGIC_VECTOR ( 31 downto 0 );
+  signal mw_premem_rx09_addra_in : STD_LOGIC_VECTOR ( 10 downto 0 );
+  signal mw_premem_rx09_wea_in : STD_LOGIC;
+  signal mw_premem_rx09_dina_in : STD_LOGIC_VECTOR ( 25 downto 0 );
+  signal mw_premem_rx09_addrb_in : STD_LOGIC_VECTOR ( 10 downto 0 );
+  signal mw_premem_rx09_quarterfrm_in : STD_LOGIC_VECTOR ( 2 downto 0 );
+  signal mw_premem_rx24_addra_in : STD_LOGIC_VECTOR ( 10 downto 0 );
+  signal mw_premem_rx24_wea_in : STD_LOGIC;
+  signal mw_premem_rx24_dina_in : STD_LOGIC_VECTOR ( 25 downto 0 );
+  signal mw_premem_rx24_addrb_in : STD_LOGIC_VECTOR ( 10 downto 0 );
+  signal mw_premem_rx24_quarterfrm_in : STD_LOGIC_VECTOR ( 2 downto 0 );
+  signal mw_fft09_aresetn_in : STD_LOGIC;
+  signal mw_fft09_data_tlast_in : STD_LOGIC;
+  signal mw_fft09_data_tready_out : STD_LOGIC;
+  signal mw_fft09_data_tvalid_in : STD_LOGIC;
+  signal mw_fft09_config_tdata_in : STD_LOGIC_VECTOR ( 7 downto 0 );
+  signal mw_fft09_config_tvalid_in : STD_LOGIC;
+  signal mw_fft09_premem_subframe_in : STD_LOGIC_VECTOR ( 1 downto 0 );
+  signal mw_fft24_aresetn_in : STD_LOGIC;
+  signal mw_fft24_data_tlast_in : STD_LOGIC;
+  signal mw_fft24_data_tready_out : STD_LOGIC;
+  signal mw_fft24_data_tvalid_in : STD_LOGIC;
+  signal mw_fft24_config_tdata_in : STD_LOGIC_VECTOR ( 7 downto 0 );
+  signal mw_fft24_config_tvalid_in : STD_LOGIC;
+  signal mw_fft24_premem_subframe_in : STD_LOGIC_VECTOR ( 1 downto 0 );
+  signal mw_postmem_rx_wea_in : STD_LOGIC;
+  signal mw_postmem_rx_addra_in : STD_LOGIC_VECTOR ( 12 downto 0 );
+  signal mw_rotenc_dec_cnt_en : STD_LOGIC;
+  signal mw_rotenc_dec_cnt_up_dwn : STD_LOGIC;
   signal qspi_flash_io0_i : STD_LOGIC;
   signal qspi_flash_io0_o : STD_LOGIC;
@@ -318,4 +408,9 @@
   signal qspi_flash_ss_t : STD_LOGIC;
 begin
+ETH0_LINK_LED_0: component IBUF
+     port map (
+      I                 => ETH0_LINK_LED,
+      O                 => ETH0_LINK_LED_g
+    );
 BOARD_IIC_scl_iobuf: component IOBUF
      port map (
@@ -367,4 +462,75 @@
       T => TRX_spi_ss_t
     );
+EUI_onewire_iobuf_0: component IOBUF
+     port map (
+      I =>  mw_EUI48_onewire_tri_o,
+      IO => EUI48_onewire_io,
+      O =>  mw_EUI48_onewire_tri_i,
+      T =>  mw_EUI48_onewire_tri_t
+    );
+rotenc_decoder_i: component rotenc_decoder
+     port map (
+      resetn            => mw_rst_100M_peripheral_aresetn,
+      clk               => mw_microblaze_0_Clk_100MHz,
+      rotenc_I          => BOARD_ROTENC_I,
+      rotenc_Q          => BOARD_ROTENC_Q,
+      cnt_up_dwn        => mw_rotenc_dec_cnt_up_dwn,
+      cnt_en            => mw_rotenc_dec_cnt_en
+    );
+auto_LVDS_rotate_i: component auto_LVDS_rotate
+    port map (
+      resetn            => mw_rst_100M_peripheral_aresetn,
+      clk               => mw_microblaze_0_Clk_100MHz,
+      LVDS09            => mw_TRX_rx09_fifo,
+      LVDS09_valid      => mw_TRX_rx09_fifo_valid,
+      LVDS24            => mw_TRX_rx24_fifo,
+      LVDS24_valid      => mw_TRX_rx24_fifo_valid,
+      rot09q            => mw_TRX_rx09_bs,
+      rot09vld          => mw_TRX_rot09vld,
+      rot24q            => mw_TRX_rx24_bs,
+      rot24vld          => mw_TRX_rot24vld
+    );
+FFT_controller_i: component FFT_controller
+    port map (
+      resetn                => mw_rst_100M_peripheral_aresetn,
+      clk                   => mw_microblaze_0_Clk_100MHz,
+      rx09_bs_32bits        => mw_TRX_rx09_bs,
+      rx09_bs_32bits_vld    => mw_TRX_rot09vld,
+      rx24_bs_32bits        => mw_TRX_rx24_bs,
+      rx24_bs_32bits_vld    => mw_TRX_rot24vld,
+      PreMem09_addra        => mw_premem_rx09_addra_in,
+      PreMem09_wea          => mw_premem_rx09_wea_in,
+      PreMem09_dina         => mw_premem_rx09_dina_in,
+      PreMem09_addrb        => mw_premem_rx09_addrb_in,
+      PreMem09_quarterfrm   => mw_premem_rx09_quarterfrm_in,
+      PreMem24_addra        => mw_premem_rx24_addra_in,
+      PreMem24_wea          => mw_premem_rx24_wea_in,
+      PreMem24_dina         => mw_premem_rx24_dina_in,
+      PreMem24_addrb        => mw_premem_rx24_addrb_in,
+      PreMem24_quarterfrm   => mw_premem_rx24_quarterfrm_in,
+      XFFT09_aresetn        => mw_fft09_aresetn_in,
+      XFFT09_s_data_tlast   => mw_fft09_data_tlast_in,
+      XFFT09_s_data_tready  => mw_fft09_data_tready_out,
+      XFFT09_s_data_tvalid  => mw_fft09_data_tvalid_in,
+      XFFT09_s_conf_tdata   => mw_fft09_config_tdata_in,
+      XFFT09_s_conf_tvalid  => mw_fft09_config_tvalid_in,
+      XFFT24_aresetn        => mw_fft24_aresetn_in,
+      XFFT24_s_data_tlast   => mw_fft24_data_tlast_in,
+      XFFT24_s_data_tready  => mw_fft24_data_tready_out,
+      XFFT24_s_data_tvalid  => mw_fft24_data_tvalid_in,
+      XFFT24_s_conf_tdata   => mw_fft24_config_tdata_in,
+      XFFT24_s_conf_tvalid  => mw_fft24_config_tvalid_in
+    );
+EUI48_FSM_i: component EUI48_FSM
+    port map (
+      resetn                => mw_rst_100M_peripheral_aresetn,
+      clk                   => mw_microblaze_0_Clk_100MHz,
+      EUI48_onewire_tri_i   => mw_EUI48_onewire_tri_i,
+      EUI48_onewire_tri_o   => mw_EUI48_onewire_tri_o,
+      EUI48_onewire_tri_t   => mw_EUI48_onewire_tri_t,
+      EUI48_FSM_start       => mw_EUI48_FSM_start,
+      EUI48_FSM_run         => mw_EUI48_FSM_run,
+      EUI48_data            => mw_EUI48_data(47 downto 0)
+    );
 msys_i: component msys
      port map (
@@ -406,7 +572,7 @@
       ETH0_MDIO_MDC_mdio_o => ETH0_MDIO_MDC_mdio_o,
       ETH0_MDIO_MDC_mdio_t => ETH0_MDIO_MDC_mdio_t,
-      EUI48_FSM_run => EUI48_FSM_run,
-      EUI48_FSM_start(0) => EUI48_FSM_start(0),
-      EUI48_data(47 downto 0) => EUI48_data(47 downto 0),
+      EUI48_FSM_run => mw_EUI48_FSM_run,
+      EUI48_FSM_start(0) => mw_EUI48_FSM_start,
+      EUI48_data(47 downto 0) => mw_EUI48_data(47 downto 0),
       FPGA_IO => FPGA_IO,
       LCD_BL(0) => LCD_BL(0),
@@ -428,8 +594,8 @@
       TRX_reset(0) => TRX_reset(0),
       TRX_rfx_mode(0) => TRX_rfx_mode(0),
-      TRX_rx09_fifo_o(31 downto 0) => TRX_rx09_fifo_o(31 downto 0),
-      TRX_rx09_fifo_valid_o => TRX_rx09_fifo_valid_o,
-      TRX_rx24_fifo_o(31 downto 0) => TRX_rx24_fifo_o(31 downto 0),
-      TRX_rx24_fifo_valid_o => TRX_rx24_fifo_valid_o,
+      TRX_rx09_fifo_o(31 downto 0) => mw_TRX_rx09_fifo(31 downto 0),
+      TRX_rx09_fifo_valid_o => mw_TRX_rx09_fifo_valid,
+      TRX_rx24_fifo_o(31 downto 0) => mw_TRX_rx24_fifo(31 downto 0),
+      TRX_rx24_fifo_valid_o => mw_TRX_rx24_fifo_valid,
       TRX_rx_clk_64MHz_clk_n => TRX_rx_clk_64MHz_clk_n,
       TRX_rx_clk_64MHz_clk_p => TRX_rx_clk_64MHz_clk_p,
@@ -463,28 +629,28 @@
       UART0_txd => UART0_txd,
       ULI_SYSTEM_XIO => ULI_SYSTEM_XIO,
-      fft09_aresetn_in => fft09_aresetn_in,
-      fft09_config_tdata_in(7 downto 0) => fft09_config_tdata_in(7 downto 0),
-      fft09_config_tvalid_in => fft09_config_tvalid_in,
-      fft09_data_tlast_in => fft09_data_tlast_in,
-      fft09_data_tready_out => fft09_data_tready_out,
-      fft09_data_tvalid_in => fft09_data_tvalid_in,
-      fft24_aresetn_in => fft24_aresetn_in,
-      fft24_config_tdata_in(7 downto 0) => fft24_config_tdata_in(7 downto 0),
-      fft24_config_tvalid_in => fft24_config_tvalid_in,
-      fft24_data_tlast_in => fft24_data_tlast_in,
-      fft24_data_tready_out => fft24_data_tready_out,
-      fft24_data_tvalid_in => fft24_data_tvalid_in,
-      microblaze_0_Clk_100MHz_o => microblaze_0_Clk_100MHz_o,
+      fft09_aresetn_in => mw_fft09_aresetn_in,
+      fft09_config_tdata_in(7 downto 0) => mw_fft09_config_tdata_in(7 downto 0),
+      fft09_config_tvalid_in => mw_fft09_config_tvalid_in,
+      fft09_data_tlast_in => mw_fft09_data_tlast_in,
+      fft09_data_tready_out => mw_fft09_data_tready_out,
+      fft09_data_tvalid_in => mw_fft09_data_tvalid_in,
+      fft24_aresetn_in => mw_fft24_aresetn_in,
+      fft24_config_tdata_in(7 downto 0) => mw_fft24_config_tdata_in(7 downto 0),
+      fft24_config_tvalid_in => mw_fft24_config_tvalid_in,
+      fft24_data_tlast_in => mw_fft24_data_tlast_in,
+      fft24_data_tready_out => mw_fft24_data_tready_out,
+      fft24_data_tvalid_in => mw_fft24_data_tvalid_in,
+      microblaze_0_Clk_100MHz_o => mw_microblaze_0_Clk_100MHz,
       phy_rst_n => phy_rst_n,
-      premem_rx09_addra_in(10 downto 0) => premem_rx09_addra_in(10 downto 0),
-      premem_rx09_addrb_in(10 downto 0) => premem_rx09_addrb_in(10 downto 0),
-      premem_rx09_dina_in(25 downto 0) => premem_rx09_dina_in(25 downto 0),
-      premem_rx09_quarterfrm_in(2 downto 0) => premem_rx09_quarterfrm_in(2 downto 0),
-      premem_rx09_wea_in(0) => premem_rx09_wea_in(0),
-      premem_rx24_addra_in(10 downto 0) => premem_rx24_addra_in(10 downto 0),
-      premem_rx24_addrb_in(10 downto 0) => premem_rx24_addrb_in(10 downto 0),
-      premem_rx24_dina_in(25 downto 0) => premem_rx24_dina_in(25 downto 0),
-      premem_rx24_quarterfrm_in(2 downto 0) => premem_rx24_quarterfrm_in(2 downto 0),
-      premem_rx24_wea_in(0) => premem_rx24_wea_in(0),
+      premem_rx09_addra_in(10 downto 0) => mw_premem_rx09_addra_in(10 downto 0),
+      premem_rx09_addrb_in(10 downto 0) => mw_premem_rx09_addrb_in(10 downto 0),
+      premem_rx09_dina_in(25 downto 0) => mw_premem_rx09_dina_in(25 downto 0),
+      premem_rx09_quarterfrm_in(2 downto 0) => mw_premem_rx09_quarterfrm_in(2 downto 0),
+      premem_rx09_wea_in(0) => mw_premem_rx09_wea_in,
+      premem_rx24_addra_in(10 downto 0) => mw_premem_rx24_addra_in(10 downto 0),
+      premem_rx24_addrb_in(10 downto 0) => mw_premem_rx24_addrb_in(10 downto 0),
+      premem_rx24_dina_in(25 downto 0) => mw_premem_rx24_dina_in(25 downto 0),
+      premem_rx24_quarterfrm_in(2 downto 0) => mw_premem_rx24_quarterfrm_in(2 downto 0),
+      premem_rx24_wea_in(0) => mw_premem_rx24_wea_in,
       qspi_flash_io0_i => qspi_flash_io0_i,
       qspi_flash_io0_o => qspi_flash_io0_o,
@@ -503,7 +669,7 @@
       qspi_flash_ss_t => qspi_flash_ss_t,
       reset => reset,
-      rotenc_dec_cnt_en => rotenc_dec_cnt_en,
-      rotenc_dec_cnt_up_dwn => rotenc_dec_cnt_up_dwn,
-      rst_100M_peripheral_aresetn(0) => rst_100M_peripheral_aresetn(0)
+      rotenc_dec_cnt_en => mw_rotenc_dec_cnt_en,
+      rotenc_dec_cnt_up_dwn => mw_rotenc_dec_cnt_up_dwn,
+      rst_100M_peripheral_aresetn(0) => mw_rst_100M_peripheral_aresetn
     );
 qspi_flash_io0_iobuf: component IOBUF
